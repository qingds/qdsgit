打开文件夹 explorer mygit
初始化仓库 git init
跟踪 git add redeme

克隆仓库 git clone https://github.com/libgit2/libgit2
克隆仓库 指定目录名 git clone https://gitshub.com/libgit2/libgit2 mylibgit

文件的两种状态 ：已跟踪文件 未跟踪文件
检查文件状态 git status 

跟踪文件 git add readme

暂存文件 git add readme

状态简览 git status -s 
        git status --short

忽略文件 创建名为 .gitignore文件

尚未暂存的文件更新了哪些部分 git diff

查看已经暂存起来的变化 git diff --staged
查看已经暂存起来的变化 git diff --cached

提交 git commit

每次准备提交前，先用 git status 看下

在 commit 命令后添加 -m 选项，将提交信息与命令放在同一行 git commit -m "the first commit"

跳过git add 直接提交 git commit -a

移除文件 git rm hello

从 Git 仓库中删除 git rm --cached hello

重命名 git mv hello hellos

查看提交历史 git log

显示每次提交所引入的差异 git log -p
                        git log --patch

限制显示的日志条目数量 git log -p -3

每次提交的简略统计信息 git log --stat
使用不同于默认格式的方式展示提交历史 git log --pretty=oneline
                                    git log --pretty=short
                                    git log --pretty=full
                                    git log --pretty=fuller

定制记录的显示格式 git log --pretty=format:"%h - %an, %ar : %s"
添加了一些 ASCII 字符串来形象地展示你的分支、合并历史 git log --pretty=format:"%h %s" --graph
                                                    git log --pretty=oneline --graph

显示最近的 n 条提交 git log -2

重新提交 git commit --amend





